// Generated by view binder compiler. Do not edit!
package com.example.cwacollections.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.cwacollections.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMemoryGameBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final Button btnConfirm;

  @NonNull
  public final Button btnPlay;

  @NonNull
  public final TextView lblLevel;

  @NonNull
  public final TextView lblNumber;

  @NonNull
  public final TextView textView;

  @NonNull
  public final EditText txtNumber;

  private ActivityMemoryGameBinding(@NonNull LinearLayout rootView, @NonNull ImageButton btnBack,
      @NonNull Button btnConfirm, @NonNull Button btnPlay, @NonNull TextView lblLevel,
      @NonNull TextView lblNumber, @NonNull TextView textView, @NonNull EditText txtNumber) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnConfirm = btnConfirm;
    this.btnPlay = btnPlay;
    this.lblLevel = lblLevel;
    this.lblNumber = lblNumber;
    this.textView = textView;
    this.txtNumber = txtNumber;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMemoryGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMemoryGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_memory_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMemoryGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageButton btnBack = rootView.findViewById(id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnConfirm;
      Button btnConfirm = rootView.findViewById(id);
      if (btnConfirm == null) {
        break missingId;
      }

      id = R.id.btnPlay;
      Button btnPlay = rootView.findViewById(id);
      if (btnPlay == null) {
        break missingId;
      }

      id = R.id.lblLevel;
      TextView lblLevel = rootView.findViewById(id);
      if (lblLevel == null) {
        break missingId;
      }

      id = R.id.lblNumber;
      TextView lblNumber = rootView.findViewById(id);
      if (lblNumber == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.txtNumber;
      EditText txtNumber = rootView.findViewById(id);
      if (txtNumber == null) {
        break missingId;
      }

      return new ActivityMemoryGameBinding((LinearLayout) rootView, btnBack, btnConfirm, btnPlay,
          lblLevel, lblNumber, textView, txtNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
